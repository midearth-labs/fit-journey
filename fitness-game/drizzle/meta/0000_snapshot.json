{
  "id": "08ba17d7-1bc1-40dd-a23f-e6ec0015a89c",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.answer_reactions": {
      "name": "answer_reactions",
      "schema": "",
      "columns": {
        "answer_id": {
          "name": "answer_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "reaction_type": {
          "name": "reaction_type",
          "type": "reaction_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "answer_reactions_answer_index": {
          "name": "answer_reactions_answer_index",
          "columns": [
            {
              "expression": "answer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "answer_reactions_answer_id_question_answers_id_fk": {
          "name": "answer_reactions_answer_id_question_answers_id_fk",
          "tableFrom": "answer_reactions",
          "tableTo": "question_answers",
          "columnsFrom": [
            "answer_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "answer_reactions_user_id_users_id_fk": {
          "name": "answer_reactions_user_id_users_id_fk",
          "tableFrom": "answer_reactions",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {
        "answer_reactions_answer_id_user_id_pk": {
          "name": "answer_reactions_answer_id_user_id_pk",
          "columns": [
            "answer_id",
            "user_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.article_tracking": {
      "name": "article_tracking",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "partition_key": {
          "name": "partition_key",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "read_count": {
          "name": "read_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "completed_count": {
          "name": "completed_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "completed_with_perfect_score": {
          "name": "completed_with_perfect_score",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "article_tracking_id_partition_key_pk": {
          "name": "article_tracking_id_partition_key_pk",
          "columns": [
            "id",
            "partition_key"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.challenge_subscribers": {
      "name": "challenge_subscribers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "challenge_id": {
          "name": "challenge_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "joined_at": {
          "name": "joined_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "last_activity_date": {
          "name": "last_activity_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "challenge_subscribers_user_index": {
          "name": "challenge_subscribers_user_index",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "joined_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "challenge_subscribers_challenge_id_challenges_id_fk": {
          "name": "challenge_subscribers_challenge_id_challenges_id_fk",
          "tableFrom": "challenge_subscribers",
          "tableTo": "challenges",
          "columnsFrom": [
            "challenge_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "challenge_subscribers_user_id_users_id_fk": {
          "name": "challenge_subscribers_user_id_users_id_fk",
          "tableFrom": "challenge_subscribers",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "challenge_subscribers_unique_member": {
          "name": "challenge_subscribers_unique_member",
          "nullsNotDistinct": false,
          "columns": [
            "challenge_id",
            "user_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.challenges": {
      "name": "challenges",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "user_challenge_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "log_types": {
          "name": "log_types",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "join_type": {
          "name": "join_type",
          "type": "challenge_join_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "invite_code": {
          "name": "invite_code",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "start_date": {
          "name": "start_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "duration_days": {
          "name": "duration_days",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "end_date": {
          "name": "end_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "max_members": {
          "name": "max_members",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "members_count": {
          "name": "members_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "challenges_public_list_index": {
          "name": "challenges_public_list_index",
          "columns": [
            {
              "expression": "start_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"challenges\".\"join_type\" = 'public'",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "challenge_status_start_date_not_locked_inactive_index": {
          "name": "challenge_status_start_date_not_locked_inactive_index",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "start_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"challenges\".\"status\" NOT IN ('locked', 'inactive')",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "challenges_user_id_users_id_fk": {
          "name": "challenges_user_id_users_id_fk",
          "tableFrom": "challenges",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "challenges_members_non_negative": {
          "name": "challenges_members_non_negative",
          "value": "\"challenges\".\"members_count\" >= 0"
        },
        "challenges_max_members_min": {
          "name": "challenges_max_members_min",
          "value": "\"challenges\".\"max_members\" >= 1"
        },
        "challenges_members_within_max": {
          "name": "challenges_members_within_max",
          "value": "\"challenges\".\"members_count\" <= \"challenges\".\"max_members\""
        },
        "challenges_personal_max_one": {
          "name": "challenges_personal_max_one",
          "value": "\"challenges\".\"join_type\" != 'personal' OR \"challenges\".\"max_members\" = 1"
        }
      },
      "isRLSEnabled": false
    },
    "public.global_tracking": {
      "name": "global_tracking",
      "schema": "",
      "columns": {
        "partition_key": {
          "name": "partition_key",
          "type": "integer",
          "primaryKey": true,
          "notNull": true
        },
        "user_count": {
          "name": "user_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "invitation_join_count": {
          "name": "invitation_join_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "article_read_count": {
          "name": "article_read_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "article_completed_count": {
          "name": "article_completed_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "article_completed_with_perfect_score": {
          "name": "article_completed_with_perfect_score",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "challenges_started": {
          "name": "challenges_started",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "challenges_joined": {
          "name": "challenges_joined",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "days_logged": {
          "name": "days_logged",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "questions_asked": {
          "name": "questions_asked",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "questions_answered": {
          "name": "questions_answered",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "progress_shares": {
          "name": "progress_shares",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.progress_shares": {
      "name": "progress_shares",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "share_type": {
          "name": "share_type",
          "type": "share_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "share_type_id": {
          "name": "share_type_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content_version": {
          "name": "content_version",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "generated_content": {
          "name": "generated_content",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "include_invite_link": {
          "name": "include_invite_link",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "share_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "clap_count": {
          "name": "clap_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "muscle_count": {
          "name": "muscle_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "party_count": {
          "name": "party_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "progress_shares_user_index": {
          "name": "progress_shares_user_index",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "updated_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "progress_shares_type_status_index": {
          "name": "progress_shares_type_status_index",
          "columns": [
            {
              "expression": "share_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "progress_shares_type_id_index": {
          "name": "progress_shares_type_id_index",
          "columns": [
            {
              "expression": "share_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "share_type_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "progress_shares_recent_active_index": {
          "name": "progress_shares_recent_active_index",
          "columns": [
            {
              "expression": "share_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"progress_shares\".\"status\" = 'active' AND \"progress_shares\".\"is_public\" = true",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "progress_shares_user_id_users_id_fk": {
          "name": "progress_shares_user_id_users_id_fk",
          "tableFrom": "progress_shares",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.question_answers": {
      "name": "question_answers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "question_id": {
          "name": "question_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "answer": {
          "name": "answer",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_anonymous": {
          "name": "is_anonymous",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "answer_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "moderation_notes": {
          "name": "moderation_notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "helpful_count": {
          "name": "helpful_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "not_helpful_count": {
          "name": "not_helpful_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "question_answers_question_index": {
          "name": "question_answers_question_index",
          "columns": [
            {
              "expression": "question_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "question_answers_approved_index": {
          "name": "question_answers_approved_index",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"question_answers\".\"status\" = 'approved'",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "question_answers_user_index": {
          "name": "question_answers_user_index",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "question_answers_question_id_questions_id_fk": {
          "name": "question_answers_question_id_questions_id_fk",
          "tableFrom": "question_answers",
          "tableTo": "questions",
          "columnsFrom": [
            "question_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "question_answers_user_id_users_id_fk": {
          "name": "question_answers_user_id_users_id_fk",
          "tableFrom": "question_answers",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.question_articles": {
      "name": "question_articles",
      "schema": "",
      "columns": {
        "question_id": {
          "name": "question_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "article_id": {
          "name": "article_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "question_articles_question_index": {
          "name": "question_articles_question_index",
          "columns": [
            {
              "expression": "question_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "question_articles_article_index": {
          "name": "question_articles_article_index",
          "columns": [
            {
              "expression": "article_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "question_articles_question_id_questions_id_fk": {
          "name": "question_articles_question_id_questions_id_fk",
          "tableFrom": "question_articles",
          "tableTo": "questions",
          "columnsFrom": [
            "question_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {
        "question_articles_question_id_article_id_pk": {
          "name": "question_articles_question_id_article_id_pk",
          "columns": [
            "question_id",
            "article_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.question_reactions": {
      "name": "question_reactions",
      "schema": "",
      "columns": {
        "question_id": {
          "name": "question_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "reaction_type": {
          "name": "reaction_type",
          "type": "reaction_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "question_reactions_question_index": {
          "name": "question_reactions_question_index",
          "columns": [
            {
              "expression": "question_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "question_reactions_question_id_questions_id_fk": {
          "name": "question_reactions_question_id_questions_id_fk",
          "tableFrom": "question_reactions",
          "tableTo": "questions",
          "columnsFrom": [
            "question_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "question_reactions_user_id_users_id_fk": {
          "name": "question_reactions_user_id_users_id_fk",
          "tableFrom": "question_reactions",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {
        "question_reactions_question_id_user_id_pk": {
          "name": "question_reactions_question_id_user_id_pk",
          "columns": [
            "question_id",
            "user_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.questions": {
      "name": "questions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "body": {
          "name": "body",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_anonymous": {
          "name": "is_anonymous",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "question_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "moderation_notes": {
          "name": "moderation_notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "helpful_count": {
          "name": "helpful_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "not_helpful_count": {
          "name": "not_helpful_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "questions_status_index": {
          "name": "questions_status_index",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "questions_approved_index": {
          "name": "questions_approved_index",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"questions\".\"status\" = 'approved'",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "questions_user_index": {
          "name": "questions_user_index",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "questions_user_id_users_id_fk": {
          "name": "questions_user_id_users_id_fk",
          "tableFrom": "questions",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_articles": {
      "name": "user_articles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "article_id": {
          "name": "article_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "first_read_date": {
          "name": "first_read_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "last_read_date": {
          "name": "last_read_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "article_log_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "quiz_all_correct_answers": {
          "name": "quiz_all_correct_answers",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "quiz_first_submitted_at": {
          "name": "quiz_first_submitted_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "quiz_attempts": {
          "name": "quiz_attempts",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "quiz_started_at": {
          "name": "quiz_started_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "quiz_submitted_at": {
          "name": "quiz_submitted_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "quiz_answers": {
          "name": "quiz_answers",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_articles_user_id_users_id_fk": {
          "name": "user_articles_user_id_users_id_fk",
          "tableFrom": "user_articles",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_article_unique_index": {
          "name": "user_article_unique_index",
          "nullsNotDistinct": false,
          "columns": [
            "user_id",
            "article_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_daily_logs": {
      "name": "user_daily_logs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "five_star_values": {
          "name": "five_star_values",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "measurement_values": {
          "name": "measurement_values",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "log_date": {
          "name": "log_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_daily_logs_user_id_users_id_fk": {
          "name": "user_daily_logs_user_id_users_id_fk",
          "tableFrom": "user_daily_logs",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_daily_log_unique": {
          "name": "user_daily_log_unique",
          "nullsNotDistinct": false,
          "columns": [
            "user_id",
            "log_date"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_metadata": {
      "name": "user_metadata",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "enabled_features": {
          "name": "enabled_features",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "current_fitness_level": {
          "name": "current_fitness_level",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "articles_read": {
          "name": "articles_read",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "articles_completed": {
          "name": "articles_completed",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "articles_completed_with_perfect_score": {
          "name": "articles_completed_with_perfect_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "challenges_started": {
          "name": "challenges_started",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "challenges_joined": {
          "name": "challenges_joined",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "days_logged": {
          "name": "days_logged",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "questions_asked": {
          "name": "questions_asked",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "questions_answered": {
          "name": "questions_answered",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "progress_shares": {
          "name": "progress_shares",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "current_streak_ids": {
          "name": "current_streak_ids",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "longest_streaks": {
          "name": "longest_streaks",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "last_activity_date": {
          "name": "last_activity_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_metadata_id_users_id_fk": {
          "name": "user_metadata_id_users_id_fk",
          "tableFrom": "user_metadata",
          "tableTo": "users",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "display_name": {
          "name": "display_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_gender": {
          "name": "avatar_gender",
          "type": "avatar_gender",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_age_range": {
          "name": "avatar_age_range",
          "type": "avatar_age_range",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "personalization_country_codes": {
          "name": "personalization_country_codes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "learning_paths": {
          "name": "learning_paths",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "timezone": {
          "name": "timezone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "preferred_reminder_time": {
          "name": "preferred_reminder_time",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "notification_preferences": {
          "name": "notification_preferences",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "invitation_code": {
          "name": "invitation_code",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "invitation_join_count": {
          "name": "invitation_join_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "inviter_code": {
          "name": "inviter_code",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_email_unique": {
          "name": "users_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        },
        "users_invitation_code_unique": {
          "name": "users_invitation_code_unique",
          "nullsNotDistinct": false,
          "columns": [
            "invitation_code"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.answer_status": {
      "name": "answer_status",
      "schema": "public",
      "values": [
        "pending",
        "approved",
        "rejected",
        "hidden"
      ]
    },
    "public.article_log_status": {
      "name": "article_log_status",
      "schema": "public",
      "values": [
        "reading_in_progress",
        "knowledge_check_in_progress",
        "knowledge_check_complete",
        "practical_in_progress",
        "completed"
      ]
    },
    "public.avatar_age_range": {
      "name": "avatar_age_range",
      "schema": "public",
      "values": [
        "child",
        "teen",
        "young-adult",
        "middle-age",
        "senior"
      ]
    },
    "public.avatar_gender": {
      "name": "avatar_gender",
      "schema": "public",
      "values": [
        "male",
        "female"
      ]
    },
    "public.challenge_join_type": {
      "name": "challenge_join_type",
      "schema": "public",
      "values": [
        "personal",
        "public",
        "invite-code"
      ]
    },
    "public.user_challenge_status": {
      "name": "user_challenge_status",
      "schema": "public",
      "values": [
        "not_started",
        "active",
        "completed",
        "locked",
        "inactive"
      ]
    },
    "public.question_status": {
      "name": "question_status",
      "schema": "public",
      "values": [
        "pending",
        "approved",
        "rejected",
        "hidden"
      ]
    },
    "public.reaction_type": {
      "name": "reaction_type",
      "schema": "public",
      "values": [
        "helpful",
        "not_helpful"
      ]
    },
    "public.share_status": {
      "name": "share_status",
      "schema": "public",
      "values": [
        "active",
        "hidden"
      ]
    },
    "public.share_type": {
      "name": "share_type",
      "schema": "public",
      "values": [
        "challenge_completion",
        "avatar_progression",
        "quiz_achievement",
        "invitation_count"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}